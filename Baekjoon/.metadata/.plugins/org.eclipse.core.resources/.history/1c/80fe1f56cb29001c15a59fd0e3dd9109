import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class B21610_마법사상어와비바라기_1 {
	static int N, M, cnt;
	static int[][] com, map, chk;
	static int[] dr = { 0, -1, -1, -1, 0, 1, 1, 1 };
	static int[] dc = { -1, -1, 0, 1, 1, 1, 0, -1 };
	static Cloud[] c;

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		map = new int[N][N];
		for (int r = 0; r < N; r++) {
			st = new StringTokenizer(br.readLine());
			for (int c = 0; c < N; c++) {
				map[r][c] = Integer.parseInt(st.nextToken());
			}
		}
		com = new int[M][2];
		for (int m = 0; m < M; m++) {
			st = new StringTokenizer(br.readLine());
			com[m][0] = Integer.parseInt(st.nextToken()) - 1;
			com[m][1] = Integer.parseInt(st.nextToken());
		}
		initCloud();

		simul();

	}

	static void simul() {
		for (int m = 0; m < M; m++) {
			moveCloud(m);
		}
	}

	static void moveCloud(int m) {

	}

	static void initCloud() {
		chk = new int[N][N];
		chk[N - 1][0] = 1;
		chk[N - 1][1] = 1;
		chk[N - 2][0] = 1;
		chk[N - 2][1] = 1;
		c = new Cloud[4];
		c[0] = new Cloud(N - 1, 0);
		c[1] = new Cloud(N - 1, 1);
		c[2] = new Cloud(N - 2, 0);
		c[3] = new Cloud(N - 2, 1);

	}

	static class Cloud {
		int r, c;

		public Cloud(int r, int c) {
			this.r = r;
			this.c = c;
		}
	}
}
