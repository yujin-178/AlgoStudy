import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.PriorityQueue;
import java.util.StringTokenizer;

public class B16235_나무재테크 {
	static int N, M, K;
	static int[][] map, add;
	static PriorityQueue<Integer>[][] treeMap;
	static int[] dr = { 0, -1, -1, -1, 0, 1, 1, 1 };
	static int[] dc = { -1, -1, 0, 1, 1, 1, 0, -1 };

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken()); // 지도 크기
		M = Integer.parseInt(st.nextToken()); // 초기 나무 개수
		K = Integer.parseInt(st.nextToken()); // 목표 년도

		map = new int[N][N];
		add = new int[N][N];
		treeMap = new PriorityQueue[N][N];
		for (int r = 0; r < N; r++) {
			st = new StringTokenizer(br.readLine());
			for (int c = 0; c < N; c++) {
				add[r][c] = Integer.parseInt(st.nextToken());
				map[r][c] = 5;
				treeMap[r][c] = new PriorityQueue<Integer>();
			}
		}

		for (int m = 0; m < M; m++) {
			st = new StringTokenizer(br.readLine());
			int r = Integer.parseInt(st.nextToken());
			int c = Integer.parseInt(st.nextToken());
			int a = Integer.parseInt(st.nextToken());
			treeMap[r - 1][c - 1].add(a);
		}
		
		for (int r = 0; r < N; r++) {
			for (int c = 0; c < N; c++) {
				for (int m = 0; m < M; m++) {
					System.out.println(treeMap[r][c].poll());
				}
			}
		}

	}

}
