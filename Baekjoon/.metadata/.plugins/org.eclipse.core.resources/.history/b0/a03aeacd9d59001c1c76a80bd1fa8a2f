import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class B2213_트리의독립집합 {
	static int N;
	static int[][] DP;
	static boolean[] chk;
	static int[] w;

	public static void main(String[] args) throws IOException {
		System.setIn(new FileInputStream("2213_input"));
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		chk = new boolean[N + 1];
		w = new int[N + 1];
		ArrayList[] edge = new ArrayList[N + 1];
		st = new StringTokenizer(br.readLine());
		for (int i = 1; i <= N; i++) {
			w[i] = Integer.parseInt(st.nextToken());
			edge[i] = new ArrayList<Integer>();
		}
		for (int i = 0; i < N - 1; i++) {
			st = new StringTokenizer(br.readLine());
			int a = Integer.parseInt(st.nextToken());
			int b = Integer.parseInt(st.nextToken());
			int start = Math.min(a, b);
			int end = Math.max(a, b);
			edge[start].add(end);
		}

		DP = new int[2][N + 1];
		dfs(1);

		System.out.println("끝");

	}

	static void dfs(int i) {
		if(chk[i]) 
	}

}
